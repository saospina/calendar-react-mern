{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","components/auth/LoginScreen.js","helpers/calendar.config.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","helpers/customStyles.js","actions/uiActions.js","components/calendar/CalendarModal.js","actions/eventActions.js","components/ui/AddNewFab.js","components/calendar/CalendarScreen.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","title","start","moment","toDate","end","add","notes","user","_id","name","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","type","payload","calendar","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","LoginScreen","className","placeholder","value","autoComplete","messages","previous","next","noEventsInRange","showMore","total","Navbar","CalendarEvent","event","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","Modal","setAppElement","now","minutes","seconds","nowPlus1","clone","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","titleValid","setTitleValid","useSelector","dispatch","useDispatch","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","console","log","Swal","fire","trim","length","id","Date","getTime","onChange","minDate","rows","width","AddNewFab","onClick","localizer","momentLocalizer","CalendarScreen","localStorage","getItem","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","onView","setItem","view","components","AppRouter","exact","path","component","to","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3024c196.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clean active'\n\n}","import moment from \"moment\";\n\nimport { types } from \"../types/types\";\n\nconst initialState = {\n    events: [\n        {\n            title: \"Birthday\",\n            start: moment().toDate(),\n            end: moment().add(2, \"hours\").toDate(),\n            notes: \"Buy something\",\n            user: {\n                _id: \"123\",\n                name: \"anthony\",\n            },\n        }\n    ],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.eventSetActive:\n            return { ...state, activeEvent: payload }\n        case types.eventAddNew:\n            return { ...state, events: [...state.events, payload] }\n        case types.eventClearActiveEvent:\n            return { ...state, activeEvent: null }\n\n        default:\n            return state\n    }\n}\n","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.uiOpenModal:\n            return { ...state, modalOpen: true }\n        case types.uiCloseModal:\n            return { ...state, modalOpen: false }\n\n        default:\n            return state\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport { calendarReducer } from \"./calendarReducer\";\n\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer\n});","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);","import React from 'react';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Email\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Register</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Name\"\n                                autoComplete=\"off\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Email\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\"\n                                autoComplete=\"off\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Create account\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","export const messages = {\n  previous: \"<\",\n  next: \">\",\n  noEventsInRange: \"No events in that range\",\n  showMore: (total) => `+ See more (${total})`,\n};\n","import React from \"react\";\n\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand ms-1\">Sergio</span>\n\n      <button className=\"btn btn-outline-danger me-1\">\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Exit</span>\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const CalendarEvent = ({ event }) => {\n    \n  const { title, user } = event;\n\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>- {user.name} </span>\n    </div>\n  );\n};\n","export const customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { customStyles } from '../../helpers/customStyles';\nimport { uiCloseModal } from '../../actions/uiActions';\nimport { eventAddNew, eventClearActiveEvent } from '../../actions/eventActions';\n\nimport './modal.css'\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initialState = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n// Calendar Modal component\nexport const CalendarModal = () => {\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [formValues, setFormValues] = useState({ initialState });\n    const { notes, title, start, end } = formValues;\n    const [titleValid, setTitleValid] = useState(true);\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        }\n        \n    }, [activeEvent])\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            console.log(momentStart, 'start');\n            console.log(momentEnd, 'end');\n            return Swal.fire('Error', 'Date end must be greater than date start', 'error')\n        };\n\n        if (title.trim().length < 3) {\n            return setTitleValid(false);\n        };\n\n        dispatch(eventAddNew({\n            ...formValues,\n            id: new Date().getTime(),\n            user: {\n                _id: '123',\n                name: 'andre'\n            }\n        }));\n        setTitleValid(true);\n        closeModal();\n\n\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    };\n\n    const closeModal = () => {\n        dispatch(eventClearActiveEvent());\n        dispatch(uiCloseModal());\n        setFormValues(initialState);\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            closeTimeoutMS={200}\n            style={customStyles}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1 className=\"text-center text-primary\"> New event </h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Start date and time *</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>End date and time *</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Title and notes *</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Event title\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n\n                    {/* <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small> */}\n                </div>\n\n                <div className=\"form-group\">\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small>\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notes\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Aditional information</small>\n                </div>\n\n                <button\n                    style={{ width: \"100%\" }}\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Save</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n};\n","import { types } from \"../types/types\";\n\nexport const eventAddNew = (payload) => ({\n    type: types.eventAddNew,\n    payload\n});\n\nexport const eventSetActive = (payload) => ({\n    type: types.eventSetActive,\n    payload\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n\n})\n\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/uiActions';\n\nimport './ui.css';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleOpenModal = () => {\n        dispatch(uiOpenModal())\n    };\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleOpenModal}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\n\nimport { messages } from \"../../helpers/calendar.config\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\n\nimport { uiOpenModal } from \"../../actions/uiActions\";\nimport { eventSetActive } from \"../../actions/eventActions\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\n/* const events = [\n  {\n    title: \"Birthday\",\n    start: moment().toDate(),\n    end: moment().add(2, \"hours\").toDate(),\n    notes: \"Buy something\",\n    user: {\n      _id: \"123\",\n      name: \"anthony\",\n    },\n  },\n]; */\n\n//Component for big calendar\nexport const CalendarScreen = () => {\n\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n  const dispatch = useDispatch();\n  const { events } = useSelector(state => state.calendar);\n\n  const onDoubleClick = () => {\n    dispatch(uiOpenModal())\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e)\n  }\n\n\n\n  const eventEstyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: \"#007acc\",\n      borderRadius: \"0px\",\n      opacity: \"block\",\n      color: \"white\",\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <Calendar\n        className=\"container-fluid\"\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventEstyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n      <CalendarModal />\n      <AddNewFab />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/\" component={CalendarScreen} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport './index.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}