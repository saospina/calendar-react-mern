{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","components/auth/LoginScreen.js","helpers/calendar.config.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","helpers/customStyles.js","actions/uiActions.js","actions/eventActions.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","events","id","Date","getTime","title","start","moment","toDate","end","add","notes","user","_id","name","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","type","payload","calendar","map","event","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","LoginScreen","className","placeholder","value","autoComplete","messages","previous","next","noEventsInRange","showMore","total","Navbar","CalendarEvent","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","eventClearActiveEvent","Modal","setAppElement","now","minutes","seconds","nowPlus1","clone","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","titleValid","setTitleValid","useSelector","dispatch","useDispatch","useEffect","handleInputChange","target","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","console","log","Swal","fire","trim","length","eventAddNew","onChange","minDate","rows","width","AddNewFab","onClick","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","localStorage","getItem","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","onView","setItem","view","onSelectSlot","selectable","components","AppRouter","exact","path","component","to","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f9b6a94.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set active',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clean active',\n    eventUpdate: '[event] Event updated',\n    eventDeleted: '[event] Event deleted'\n\n}","import moment from \"moment\";\n\nimport { types } from \"../types/types\";\n\nconst initialState = {\n    events: [\n        {\n            id: new Date().getTime(),\n            title: \"Birthday\",\n            start: moment().toDate(),\n            end: moment().add(2, \"hours\").toDate(),\n            notes: \"Buy something\",\n            user: {\n                _id: \"123\",\n                name: \"anthony\",\n            },\n        }\n    ],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.eventSetActive:\n            return { ...state, activeEvent: payload }\n        case types.eventAddNew:\n            return { ...state, events: [...state.events, payload] }\n        case types.eventClearActiveEvent:\n            return { ...state, activeEvent: null }\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map((event) => (\n                    event.id === payload.id ? payload : event\n                )\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter((event) => (\n                    event.id !== state.activeEvent.id\n                )\n                ),\n                activeEvent: null\n            }\n\n        default:\n            return state\n    }\n}\n","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.uiOpenModal:\n            return { ...state, modalOpen: true }\n        case types.uiCloseModal:\n            return { ...state, modalOpen: false }\n\n        default:\n            return state\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport { calendarReducer } from \"./calendarReducer\";\n\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer\n});","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);","import React from 'react';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Email\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Register</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Name\"\n                                autoComplete=\"off\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Email\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\"\n                                autoComplete=\"off\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Create account\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","export const messages = {\n  previous: \"<\",\n  next: \">\",\n  noEventsInRange: \"No events in that range\",\n  showMore: (total) => `+ See more (${total})`,\n};\n","import React from \"react\";\n\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand ms-1\">Sergio</span>\n\n      <button className=\"btn btn-outline-danger me-1\">\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Exit</span>\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const CalendarEvent = ({ event }) => {\n    \n  const { title, user } = event;\n\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>- {user.name} </span>\n    </div>\n  );\n};\n","export const customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})\n","import { types } from \"../types/types\";\n\nexport const eventAddNew = (payload) => ({\n    type: types.eventAddNew,\n    payload\n});\n\nexport const eventSetActive = (payload) => ({\n    type: types.eventSetActive,\n    payload\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n\n});\n\nexport const eventUpdated = (payload) => ({\n    type: types.eventUpdate,\n    payload\n});\n\nexport const eventDeleted = () => ({\n    type: types.eventDeleted\n})\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { customStyles } from '../../helpers/customStyles';\nimport { uiCloseModal } from '../../actions/uiActions';\nimport { eventAddNew, eventClearActiveEvent, eventUpdated } from '../../actions/eventActions';\n\nimport './modal.css'\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initialState = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n// Calendar Modal component\nexport const CalendarModal = () => {\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [formValues, setFormValues] = useState({ initialState });\n    const { notes, title, start, end } = formValues;\n    const [titleValid, setTitleValid] = useState(true);\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        } else {\n            setFormValues(initialState)\n        }\n\n    }, [activeEvent])\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            console.log(momentStart, 'start');\n            console.log(momentEnd, 'end');\n            return Swal.fire('Error', 'Date end must be greater than date start', 'error')\n        };\n\n        if (title.trim().length < 3) {\n            return setTitleValid(false);\n        };\n\n        if (activeEvent) {\n            dispatch(eventUpdated(formValues))\n        } else {\n\n            dispatch(eventAddNew({\n                ...formValues,\n                id: new Date().getTime(),\n                user: {\n                    _id: '123',\n                    name: 'andre'\n                }\n            }));\n        }\n\n        setTitleValid(true);\n        closeModal();\n\n\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    };\n\n    const closeModal = () => {\n        dispatch(eventClearActiveEvent());\n        dispatch(uiCloseModal());\n        setFormValues(initialState);\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            closeTimeoutMS={200}\n            style={customStyles}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1 className=\"text-center text-primary\"> {(activeEvent) ? 'Edit event' : 'New event'} </h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Start date and time *</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>End date and time *</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Title and notes *</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Event title\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n\n                    {/* <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small> */}\n                </div>\n\n                <div className=\"form-group\">\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small>\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notes\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Aditional information</small>\n                </div>\n\n                <button\n                    style={{ width: \"100%\" }}\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Save</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/uiActions';\n\nimport './ui.css';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleOpenModal = () => {\n        dispatch(uiOpenModal())\n    };\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleOpenModal}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventDeleted } from '../../actions/eventActions';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n    const handleDeleteEvent = () => {\n        dispatch(eventDeleted())\n    };\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDeleteEvent}\n        >\n            <i className=\"fas fa-trash\"></i>\n        </button>\n    )\n}\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\n\nimport { messages } from \"../../helpers/calendar.config\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\n\nimport { uiOpenModal } from \"../../actions/uiActions\";\nimport { eventClearActiveEvent, eventSetActive } from \"../../actions/eventActions\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\n\n//Component for big calendar\nexport const CalendarScreen = () => {\n\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector(state => state.calendar);\n\n  const onDoubleClick = () => {\n    dispatch(uiOpenModal())\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e)\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent())\n\n  };\n\n\n\n  const eventEstyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: \"#007acc\",\n      borderRadius: \"0px\",\n      opacity: \"block\",\n      color: \"white\",\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <Calendar\n        className=\"container-fluid\"\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventEstyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        view={lastView}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n      <CalendarModal />\n      {\n        activeEvent && <DeleteEventFab />\n      }\n      <AddNewFab />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginScreen} />\n          <Route exact path=\"/\" component={CalendarScreen} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport './index.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}