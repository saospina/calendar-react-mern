{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/calendar.config.js","actions/authActions.js","actions/eventActions.js","services/authAPI.js","components/ui/Navbar.js","thunks/authThunk.js","components/calendar/CalendarEvent.js","helpers/customStyles.js","actions/uiActions.js","services/eventsAPI.js","helpers/transformEvents.js","components/calendar/CalendarModal.js","thunks/eventsThunk.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/loading/Loading.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","type","payload","calendar","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","messages","previous","next","noEventsInRange","showMore","total","login","eventClearActiveEvent","authLoginService","a","url","getUrl","fetch","method","headers","body","JSON","stringify","response","json","data","authRegisterService","console","log","getToken","token","localStorage","getItem","process","Navbar","name","useSelector","dispatch","useDispatch","className","onClick","clear","CalendarEvent","title","user","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","baseUrl","fetchWithToken","endpoint","transformEvents","end","moment","toDate","start","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","notes","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","titleValid","setTitleValid","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","onSubmit","e","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","isUpdated","msg","getState","uid","isCreated","_id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","width","AddNewFab","DeleteEventFab","isDeleted","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","transformedEvents","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","onView","setItem","view","onSelectSlot","selectable","components","useForm","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","email","password","isAuthenticated","Date","getTime","ok","username","Loading","loadingStyle","height","role","PublicRoute","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7daeedb7.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set active',\n    eventStartAddNew: '[event] Start add new',\n    eventLogout: '[event Logout clean]',\n    eventAddNew: '[event] Add new',\n    eventLoaded:'[event] Events loaded',\n    eventClearActiveEvent: '[event] Clean active',\n    eventUpdate: '[event] Event updated',\n    eventDeleted: '[event] Event deleted', \n\n    \n    authFinish: '[auth] Finish login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] logout',\n\n}","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    checking: true,\n    /* uid:null,\n    name:null */\n\n}\n\nexport const authReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.authLogin:\n            return { ...state, checking: false, ...payload }\n        case types.authFinish:\n            return { ...state, checking: false }\n        case types.authLogout:\n            return { checking: false }\n\n        default:\n            return state\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [...state.events, payload]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map((event) => (\n                    event.id === payload.id ? payload : event\n                )\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter((event) => (\n                    event.id !== state.activeEvent.id\n                )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...payload]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state\n    }\n}\n","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n\n        case types.uiOpenModal:\n            return { ...state, modalOpen: true }\n        case types.uiCloseModal:\n            return { ...state, modalOpen: false }\n\n        default:\n            return state\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\n\nimport { uiReducer } from \"./uiReducer\";\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n});","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);","export const messages = {\n  previous: \"<\",\n  next: \">\",\n  noEventsInRange: \"No events in that range\",\n  showMore: (total) => `+ See more (${total})`,\n};\n","import { types } from \"../types/types\";\n\nexport const login = (payload) => ({\n    type: types.authLogin,\n    payload\n});\n\nexport const checkingFinish = () => ({\n    type: types.authFinish\n});\n\nexport const logout = () => ({\n    type: types.authLogout\n})\n\n\n","import { types } from \"../types/types\";\n\nexport const eventAddNew = (payload) => ({\n    type: types.eventAddNew,\n    payload\n});\n\nexport const eventSetActive = (payload) => ({\n    type: types.eventSetActive,\n    payload\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n\n});\n\nexport const eventUpdated = (payload) => ({\n    type: types.eventUpdate,\n    payload\n});\n\nexport const eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventLoaded = (payload) => ({\n    type: types.eventLoaded,\n    payload\n});\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n})\n\n\n\n\n\n\n","\n\n\nexport const authLoginService = async (payload) => {\n\n    const url = getUrl('/auth');\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n    });\n    const data = await response.json();\n    return data;\n};\n\nexport const authRegisterService = async (payload) => {\n\n    console.log(payload, 'en el service');\n\n    const url = getUrl('/auth/register');\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n    });\n    const data = await response.json();\n    return data;\n};\n\nexport const getToken = async () => {\n\n    const token = localStorage.getItem('token') || '';\n    const url = getUrl('/auth/renew');\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: { 'x-token': token }\n    });\n    const data = await response.json();\n    return data;\n};\n\n\n\nconst getUrl = (url) => {\n    const URL = `${process.env.REACT_APP_API_URL}${url}`\n    return URL;\n};","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startLogout } from \"../../thunks/authThunk\";\n\nexport const Navbar = () => {\n\n  const { name } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(startLogout())\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand ms-1\">{name}</span>\n\n      <button \n      className=\"btn btn-outline-danger me-1\"\n      onClick={handleLogout}\n      >\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Exit</span>\n      </button>\n    </div>\n  );\n};\n","import Swal from \"sweetalert2\";\n\nimport { checkingFinish, login, logout } from \"../actions/authActions\";\nimport { eventLogout } from \"../actions/eventActions\";\nimport { authLoginService, authRegisterService, getToken } from \"../services/authAPI\";\n\n\nexport const startLoginEmailPass = (email, password) => async (dispatch) => {\n\n    const response = await authLoginService({ email, password });\n    const { isAuthenticated, token, uid, name, msg } = response;\n\n    if (isAuthenticated) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n        dispatch(login({ uid, name }));\n    } else {\n        Swal.fire('Error', msg, \"error\")\n    }\n};\n\nexport const startRegister = (name, email, password) => async (dispatch) => {\n\n    const response = await authRegisterService({ name, email, password });\n    const { ok, token, uid, name: username, msg } = response;\n\n    if (ok) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n        dispatch(login({ uid, username }));\n    } else {\n        Swal.fire('Error', msg, \"error\")\n    }\n\n};\n\nexport const startChecking = () => async (dispatch) => {\n\n    const response = await getToken();\n    const { isAuthenticated, token, uid, name } = response;\n\n    if (isAuthenticated) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('token-init-date', new Date().getTime());\n        dispatch(login({ uid, name }));\n    } else {\n        dispatch(checkingFinish())\n    }\n\n};\n\nexport const startLogout = () => async (dispatch) => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n};","import React from \"react\";\n\nexport const CalendarEvent = ({ event }) => {\n    \n  const { title, user } = event;\n\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>- {user.name} </span>\n    </div>\n  );\n};\n","export const customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n})\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})\n","const baseUrl = process.env.REACT_APP_API_URL;\n\n\n\nexport const fetchWithToken = async (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n\n        const response = await fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n\n        const payload = await response.json();\n\n        return payload;\n    } else {\n\n        const response = await fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n\n        const payload = await response.json();\n        return payload\n    }\n}","import moment from \"moment\";\n\n\n\nexport const transformEvents = (events = []) => {\n    \n    return events.map((event) => {\n        return {\n            ...event,\n             end: moment(event.end).toDate(),\n             start: moment(event.start).toDate(),\n            }\n    })\n};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { customStyles } from '../../helpers/customStyles';\nimport { uiCloseModal } from '../../actions/uiActions';\nimport { eventClearActiveEvent } from '../../actions/eventActions';\n\nimport './modal.css'\nimport { eventStartAddNew, eventStartUpdating } from '../../thunks/eventsThunk';\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initialState = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n// Calendar Modal component\nexport const CalendarModal = () => {\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [formValues, setFormValues] = useState({ initialState });\n    const { notes, title, start, end } = formValues;\n    const [titleValid, setTitleValid] = useState(true);\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        } else {\n            setFormValues(initialState)\n        }\n\n    }, [activeEvent])\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    };\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            console.log(momentStart, 'start');\n            console.log(momentEnd, 'end');\n            return Swal.fire('Error', 'Date end must be greater than date start', 'error')\n        };\n\n        if (title.trim().length < 3) {\n            return setTitleValid(false);\n        };\n\n        if (activeEvent) {\n            dispatch(eventStartUpdating(formValues))\n        } else {\n\n            dispatch(eventStartAddNew(formValues ));\n        }\n\n        setTitleValid(true);\n        closeModal();\n\n\n    };\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    };\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    };\n\n    const closeModal = () => {\n        dispatch(eventClearActiveEvent());\n        dispatch(uiCloseModal());\n        setFormValues(initialState);\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            closeTimeoutMS={200}\n            style={customStyles}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1 className=\"text-center text-primary\"> {(activeEvent) ? 'Edit event' : 'New event'} </h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Start date and time *</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>End date and time *</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Title and notes *</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Event title\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n\n                    {/* <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small> */}\n                </div>\n\n                <div className=\"form-group\">\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Short description</small>\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notes\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Aditional information</small>\n                </div>\n\n                <button\n                    style={{ width: \"100%\" }}\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Save</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n};\n","import { eventAddNew, eventDeleted, eventLoaded, eventUpdated } from \"../actions/eventActions\";\nimport { fetchWithToken } from \"../services/eventsAPI\";\nimport { transformEvents } from '../helpers/transformEvents';\nimport Swal from \"sweetalert2\";\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n        try {\n\n            const response = await fetchWithToken('events', event, 'POST');\n            const { isCreated, id } = response;\n\n            if (isCreated) {\n                event.id = id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                dispatch(eventAddNew(event))\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const eventStartLoading = () => async (dispatch) => {\n\n    try {\n        const response = await fetchWithToken('events');\n        const { events } = response;\n        const transformedEvents = transformEvents(events);\n        dispatch(eventLoaded(transformedEvents));\n    } catch (error) {\n        console.log(error);\n    }\n\n\n};\nexport const eventStartUpdating = (event) => async (dispatch) => {\n\n    try {\n\n        const response = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n        const { isUpdated, msg } = response;\n\n        if (isUpdated) {\n            dispatch(eventUpdated(event));\n        } else {\n            Swal.fire('Error', msg, 'error')\n        }\n\n    } catch (error) {\n        console.log(error);\n    }\n\n\n};\n\nexport const eventStartDeleting = () => async (dispatch, getState) => {\n\n    const { id } = getState().calendar.activeEvent;\n\n    try {\n\n        const response = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n        const { isDeleted, msg } = response;\n\n        if (isDeleted) {\n            dispatch(eventDeleted());\n        } else {\n            Swal.fire('Error', msg, 'error')\n        }\n\n    } catch (error) {\n        console.log(error);\n    }\n\n\n};\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/uiActions';\n\nimport './ui.css';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleOpenModal = () => {\n        dispatch(uiOpenModal())\n    };\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleOpenModal}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventStartDeleting } from '../../thunks/eventsThunk';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n    const handleDeleteEvent = () => {\n        dispatch(eventStartDeleting())\n    };\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDeleteEvent}\n        >\n            <i className=\"fas fa-trash\"></i>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\n\nimport { messages } from \"../../helpers/calendar.config\";\nimport { Navbar } from \"../ui/Navbar\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\n\nimport { uiOpenModal } from \"../../actions/uiActions\";\nimport { eventClearActiveEvent, eventSetActive } from \"../../actions/eventActions\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { eventStartLoading } from \"../../thunks/eventsThunk\";\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\n\n//Component for big calendar\nexport const CalendarScreen = () => {\n\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector(state => state.calendar);\n  const { uid } = useSelector(state => state.auth);\n  useEffect(() => {\n    dispatch(eventStartLoading())\n\n  }, [dispatch])\n\n  const onDoubleClick = () => {\n    dispatch(uiOpenModal())\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewChange = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e)\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent())\n\n  };\n\n\n\n  const eventEstyleGetter = (event, start, end, isSelected) => {\n    console.log(event.user._id, 'aaaaaa');\n\n    const style = {\n      backgroundColor: (uid === event.user._id) ? '#007acc' : '#ffbb99',\n      borderRadius: \"0px\",\n      opacity: \"block\",\n      color: \"white\",\n    };\n\n    return {\n      style,\n    };\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <Calendar\n        className=\"container-fluid\"\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        messages={messages}\n        eventPropGetter={eventEstyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onView={onViewChange}\n        view={lastView}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n      <CalendarModal />\n      {\n        activeEvent && <DeleteEventFab />\n      }\n      <AddNewFab />\n    </div>\n  );\n};\n","import { useState } from 'react';\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startLoginEmailPass, startRegister } from '../../thunks/authThunk';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: \"\",\n        lPassword: \"\"\n    });\n    const { lEmail, lPassword } = formLoginValues;\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: '',\n        rEmail: \"@gmail.com\",\n        rPassword1: \"\",\n        rPassword2: \"\"\n    });\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPass(lEmail, lPassword))\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (rPassword1 !== rPassword2) {\n            return Swal.fire(\"Email\", 'Both passwords must match', 'warning')\n        } else {\n            dispatch(startRegister(rName, rEmail, rPassword1))\n        }\n    };\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Login</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Email\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Register</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Name\"\n                                autoComplete=\"off\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Email\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\"\n                                autoComplete=\"off\"\n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control mb-1\"\n                                placeholder=\"Password\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Create account\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","\nimport React from 'react';\n\nimport './loading.css'\n\nexport const Loading = () => {\n\n    const loadingStyle = {\n        width: '3rem',\n        height: '3rem'\n    };\n\n    return (\n        <div className=\"loading text-center text-info\">\n            <div className=\"spinner-border\" style={loadingStyle} role=\"status\">\n            </div>\n            <div className=\"spinner-grow\" style={loadingStyle} role=\"status\">\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n    return (\n        <Route\n            {...rest}\n            component={props => (\n                (isAuthenticated)\n                    ? <Redirect to=\"/\" />\n                    : <Component {...props} />\n            )}\n        >\n\n        </Route>\n    )\n};\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n\n}) => {\n\n    return (\n        <Route\n            {...rest}\n            component={props => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/login\" />\n            )}\n        >\n\n        </Route>\n    )\n};\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { Loading } from \"../components/loading/Loading\";\nimport { startChecking } from \"../thunks/authThunk\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { PrivateRoute } from \"./PrivateRoute\";\n\nexport const AppRouter = () => {\n\n  const dispatch = useDispatch();\n  const { checking, uid } = useSelector(state => state.auth)\n\n  useEffect(() => {\n    dispatch(startChecking())\n\n  }, [dispatch]);\n\n  if (checking) {\n    return (<Loading />)\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\n          <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport './index.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}